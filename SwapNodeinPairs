/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        //checking for empty
        if (head == null || head.next == null){
            return head;
        }

        //initilizing
        ListNode dummy = new ListNode(0);
        ListNode prev = dummy;
        ListNode current = head;


        //loop to traverse and swap
        while(current != null && current.next != null){
            ListNode nextPair = current.next.next;
            ListNode second = current.next;

            //swap
            second.next = current;
            current.next = nextPair;
            prev.next = second;

            prev = current;
            current = nextPair;

        }

        return dummy.next;





    }
}
